(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))s(l);new MutationObserver(l=>{for(const i of l)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function n(l){const i={};return l.integrity&&(i.integrity=l.integrity),l.referrerPolicy&&(i.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?i.credentials="include":l.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(l){if(l.ep)return;l.ep=!0;const i=n(l);fetch(l.href,i)}})();let r;const Q=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&Q.decode();let I=null;function ge(){return(I===null||I.byteLength===0)&&(I=new Uint8Array(r.memory.buffer)),I}function Y(e,t){return e=e>>>0,Q.decode(ge().subarray(e,e+t))}let W=null;function ue(){return(W===null||W.byteLength===0)&&(W=new Uint32Array(r.memory.buffer)),W}function de(e,t){return e=e>>>0,ue().subarray(e/4,e/4+t)}let C=null;function Z(){return(C===null||C.byteLength===0)&&(C=new Float32Array(r.memory.buffer)),C}function z(e,t){return e=e>>>0,Z().subarray(e/4,e/4+t)}let X=0;function fe(e,t){const n=t(e.length*4,4)>>>0;return Z().set(e,n/4),X=e.length,n}typeof FinalizationRegistry>"u"||new FinalizationRegistry(e=>r.__wbg_obstacle_free(e>>>0,1));const J=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_world_free(e>>>0,1));class ee{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,J.unregister(this),t}free(){const t=this.__destroy_into_raw();r.__wbg_world_free(t,0)}constructor(t){const n=r.world_new(t);return this.__wbg_ptr=n>>>0,J.register(this,this.__wbg_ptr,this),this}update(t){r.world_update(this.__wbg_ptr,t)}get_best_dino_x(){return r.world_get_best_dino_x(this.__wbg_ptr)}get_best_dino_y(){return r.world_get_best_dino_y(this.__wbg_ptr)}get_best_dino_velocity_y(){return r.world_get_best_dino_velocity_y(this.__wbg_ptr)}get_best_index(){return r.world_get_best_index(this.__wbg_ptr)>>>0}get_best_score(){return r.world_get_best_score(this.__wbg_ptr)>>>0}get_generation(){return r.world_get_generation(this.__wbg_ptr)>>>0}get_obstacle_count(){return r.world_get_obstacle_count(this.__wbg_ptr)>>>0}get_obstacle_x(t){return r.world_get_obstacle_x(this.__wbg_ptr,t)}get_fitness_history(){const t=r.world_get_fitness_history(this.__wbg_ptr);var n=de(t[0],t[1]).slice();return r.__wbindgen_free(t[0],t[1]*4,4),n}get_score_of(t){return r.world_get_score_of(this.__wbg_ptr,t)>>>0}get_best_input_weights(){const t=r.world_get_best_input_weights(this.__wbg_ptr);var n=z(t[0],t[1]).slice();return r.__wbindgen_free(t[0],t[1]*4,4),n}get_best_output_weights(){const t=r.world_get_best_output_weights(this.__wbg_ptr);var n=z(t[0],t[1]).slice();return r.__wbindgen_free(t[0],t[1]*4,4),n}get_best_bias(){return r.world_get_best_bias(this.__wbg_ptr)}set_best_weights(t){const n=fe(t,r.__wbindgen_malloc),s=X;r.world_set_best_weights(this.__wbg_ptr,n,s)}set_best_bias(t){r.world_set_best_bias(this.__wbg_ptr,t)}count_alive(){return r.world_count_alive(this.__wbg_ptr)>>>0}get_average_score(){return r.world_get_average_score(this.__wbg_ptr)}is_alive(t){return r.world_is_alive(this.__wbg_ptr,t)!==0}get_best_hidden_biases(){const t=r.world_get_best_hidden_biases(this.__wbg_ptr);var n=z(t[0],t[1]).slice();return r.__wbindgen_free(t[0],t[1]*4,4),n}get_population_size(){return r.world_get_population_size(this.__wbg_ptr)>>>0}get_dino_x(t){return r.world_get_dino_x(this.__wbg_ptr,t)}get_dino_y(t){return r.world_get_dino_y(this.__wbg_ptr,t)}get_speed_multiplier(){return r.world_get_speed_multiplier(this.__wbg_ptr)}}async function be(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(s){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",s);else throw s}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function he(){const e={};return e.wbg={},e.wbg.__wbg_log_c222819a41e063d3=function(t){console.log(t)},e.wbg.__wbg_warn_4ca3906c248c47c4=function(t){console.warn(t)},e.wbg.__wbindgen_init_externref_table=function(){const t=r.__wbindgen_export_0,n=t.grow(4);t.set(0,void 0),t.set(n+0,void 0),t.set(n+1,null),t.set(n+2,!0),t.set(n+3,!1)},e.wbg.__wbindgen_string_new=function(t,n){return Y(t,n)},e.wbg.__wbindgen_throw=function(t,n){throw new Error(Y(t,n))},e}function we(e,t){return r=e.exports,te.__wbindgen_wasm_module=t,C=null,W=null,I=null,r.__wbindgen_start(),r}async function te(e){if(r!==void 0)return r;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL("/robo-dino/assets/rust_dino_bg-BWnd4XSc.wasm",import.meta.url));const t=he();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:s}=await be(await e,t);return we(n,s)}let _,ne=1,T=200,D=!0,ie=!0;const U=document.getElementById("main"),b=U.getContext("2d"),P=document.getElementById("fitness"),M=P.getContext("2d");let j=[];const k=document.getElementById("weightsCanvas"),O=k.getContext("2d"),E=document.getElementById("neuralNet"),h=E.getContext("2d"),oe="rgb(173, 216, 230)",re="rgb(0, 128, 128)",se="rgb(238, 130, 238)";function G(e){return 1/(1+Math.exp(-e))}function pe(e,t,n){let s=0,l=0,i=0,c=0,d=0,w=0;try{const y=e.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);if(y)[s,l,i]=y.slice(1).map(Number);else return e;t==="white"&&([c,d,w]=[255,255,255])}catch(y){return console.error("Color parsing/interpolation failed",y),e}const g=Math.round(s+(c-s)*n),f=Math.round(l+(d-l)*n),p=Math.round(i+(w-i)*n);return`rgb(${g}, ${f}, ${p})`}function ye(e){const t=(e+1)/2,n=Math.floor(t*255),s=Math.floor((1-t)*255);return`rgb(${n}, 0, ${s})`}function me(){const e=_.get_best_input_weights(),t=3,n=Math.ceil(e.length/t),s=k.width/n,l=k.height/t;O.clearRect(0,0,k.width,k.height);for(let i=0;i<e.length;i++){const c=Math.floor(i/n),d=i%n;O.fillStyle=ye(e[i]),O.fillRect(d*s,c*l,s,l)}}function $(e,t,n,s,l,i,c,d,w){const g=Math.max(0,Math.min(1,d)),f=.005,y=s*.2*g,S=s+y*Math.sin(f*w),A=g*.3,m=pe(l,"white",A);e.beginPath(),e.arc(t,n,S,0,2*Math.PI),e.fillStyle=m,e.fill(),e.strokeStyle="black",e.lineWidth=1,e.stroke(),e.fillStyle="black",e.font="10px monospace",e.textAlign="center",e.fillText(`${i}`,t,n-S-5),e.fillText(c.toFixed(2),t,n+4),e.textAlign="start"}function K(e,t,n,s,l){const i=Math.max(-1,Math.min(1,l)),c=Math.floor(Math.abs(i)*255),d=i>=0?`rgb(${c},0,0)`:`rgb(${c/2},${c/2},${c})`;h.strokeStyle=d,h.lineWidth=1+Math.abs(i)*2,h.beginPath(),h.moveTo(e,t),h.lineTo(n,s),h.stroke()}function ve(e,t,n){const s="10px monospace";let i=n;e.fillStyle="black",e.font=s,e.fillText("Legend:",t,i),i+=12*1.5,e.fillText("Connections:",t,i),i+=12,e.strokeStyle="rgb(255,0,0)",e.lineWidth=1+1*2,e.beginPath(),e.moveTo(t,i),e.lineTo(t+20,i),e.stroke(),e.fillStyle="black",e.fillText("+ Weight (Intensity)",t+25,i+3),i+=12,e.strokeStyle="rgb(127,127,255)",e.lineWidth=1+1*2,e.beginPath(),e.moveTo(t,i),e.lineTo(t+20,i),e.stroke(),e.fillStyle="black",e.fillText("- Weight (Intensity)",t+25,i+3),i+=12*1.5,e.fillText("Neurons:",t,i),i+=12,e.fillStyle=oe,e.beginPath(),e.arc(t+10,i,5,0,2*Math.PI),e.fill(),e.fillStyle="black",e.fillText("Input",t+25,i+3),i+=12,e.fillStyle=re,e.beginPath(),e.arc(t+10,i,5,0,2*Math.PI),e.fill(),e.fillStyle="black",e.fillText("Hidden",t+25,i+3),i+=12,e.fillStyle=se,e.beginPath(),e.arc(t+10,i,5,0,2*Math.PI),e.fill(),e.fillStyle="black",e.fillText("Output (Jump)",t+25,i+3),i+=12*1.5,e.fillText("Neuron activation:",t,i),i+=12,e.fillText("Pulsing/luminosity",t+5,i),i+=12,e.fillText("= Neuron output",t+5,i),e.strokeStyle="black",e.lineWidth=1}function Se(e){h.clearRect(0,0,E.width,E.height);const t=_.get_best_index();if(typeof t!="number"||t<0||t>=_.get_population_size()){console.warn("Invalid bestIndex received:",t),h.fillStyle="red",h.font="12px monospace",h.fillText("Waiting for best dino data...",10,20);return}const n=_.get_best_input_weights(),s=_.get_best_output_weights(),l=_.get_best_bias(),i=_.get_best_hidden_biases(),c=s.length,d=["Dist.","Speed Mult.","Score Norm."],w=d.length,g=18,f=[],p=[],y=_.get_dino_x(t),S=_.get_score_of(t),A=_.get_speed_multiplier();let m=1/0;const ce=5;for(let o=0;o<_.get_obstacle_count();o++){const a=_.get_obstacle_x(o);if(a+ce>y){const u=a-y;u<m&&(m=u)}}const L=[m===1/0?1e3:m,A,(S+1)/100];function B(o,a,u){const v=(u-1)*60,H=(E.height-v)/2+o*60;return[a,H]}for(let o=0;o<w;o++){const[a,u]=B(o,50,w);f.push({x:a,y:u})}for(let o=0;o<c;o++){const[a,u]=B(o,180,c);p.push({x:a,y:u})}const[q,V]=B(0,310,1);for(let o=0;o<c;o++)for(let a=0;a<w;a++){const u=f[a],v=p[o],R=n[o*w+a];K(u.x,u.y,v.x,v.y,R)}for(let o=0;o<c;o++){const a=p[o];K(a.x,a.y,q,V,s[o])}const F=[];for(let o=0;o<c;o++){let a=L.reduce((v,R,H)=>v+R*n[o*w+H],0);a+=i[o];const u=G(a);F.push(u)}const _e=F.reduce((o,a,u)=>o+a*s[u],0)+l,N=G(_e);for(let o=0;o<w;o++){const{x:a,y:u}=f[o],v=Math.max(0,Math.min(1,L[o]));$(h,a,u,g,oe,d[o],L[o],v,e)}for(let o=0;o<c;o++){const{x:a,y:u}=p[o];$(h,a,u,g,re,"",F[o],F[o],e)}const ae=N>.6?N:0;$(h,q,V,g,se,"Jump",N,ae,e),ve(h,E.width-160,20)}function Ae(){const e=U.width,t=U.height;b.clearRect(0,0,e,t),b.fillStyle="brown",b.fillRect(0,t-20,e,20);const n=_.get_population_size?.()??1,s=20,l=_.get_best_index?.(),i=typeof l=="number"&&l>=0;for(let g=0;g<n;g++){const f=_.is_alive(g);let p=!1;if(D||(f&&console.log("hasValidBestIndex",i,"i",g,"bestIndex",l,"alive",f,"showAll",D),(!i||g!==l)&&(p=!0)),!p&&ie&&!f&&(p=!0),p)continue;const y=_.get_dino_x(g),S=_.get_dino_y(g),A=t-20-S-s,m="rgba(128, 128, 128, 0.05)";b.fillStyle=f?"green":m,b.fillRect(y,A,s,s),b.strokeStyle=f?"white":m,b.lineWidth=1,b.strokeRect(y,A,s,s)}for(let g=0;g<_.get_obstacle_count();g++){const f=_.get_obstacle_x(g);b.fillStyle="red",b.fillRect(f,t-20-30,5,30)}const c=_.get_best_score(),d=_.count_alive(),w=_.get_generation();b.fillStyle="black",b.font="14px monospace",b.fillText(`Score: ${c}`,10,20),b.fillText(`Alive: ${d}`,100,20),b.fillText(`Generation: ${w}`,350,20)}function Me(e){M.clearRect(0,0,P.width,P.height);const t=Math.max(...e,10),n=P.width,s=P.height;M.beginPath(),M.moveTo(0,s),e.forEach((l,i)=>{const c=i/e.length*n,d=s-l/t*s;M.lineTo(c,d)}),M.strokeStyle="blue",M.stroke()}function le(e,t){if(x||_.update(1/60*ne),Ae(),me(),Me(j),Se(e),!x){const n=_.get_best_score();j.push(n)}requestAnimationFrame(n=>le(n))}te().then(e=>{_=new ee(T),requestAnimationFrame(t=>le(t,e.memory.buffer))});let x=!1;document.getElementById("togglePause").addEventListener("click",()=>{x=!x;const e=document.getElementById("togglePause");e.textContent=x?"▶️ Resume":"⏸️ Pause"});document.getElementById("speed").addEventListener("input",e=>{ne=parseFloat(e.target.value)});document.getElementById("showAll").addEventListener("change",e=>{D=e.target.checked});document.getElementById("showOnlyAlive").addEventListener("change",e=>{ie=e.target.checked});document.getElementById("applySettings").addEventListener("click",()=>{const e=document.getElementById("agents"),t=parseInt(e.value);!isNaN(t)&&t>0&&t!==T?(T=t,j=[],_=new ee(T),console.log(`Restarted with ${T} agents.`)):(isNaN(t)||t<=0)&&(console.warn("Invalid agent count specified."),e.value=T.toString())});
