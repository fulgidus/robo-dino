(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function n(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(s){if(s.ep)return;s.ep=!0;const i=n(s);fetch(s.href,i)}})();let r;const A=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&A.decode();let f=null;function S(){return(f===null||f.byteLength===0)&&(f=new Uint8Array(r.memory.buffer)),f}function m(e,t){return e=e>>>0,A.decode(S().subarray(e,e+t))}let u=null;function L(){return(u===null||u.byteLength===0)&&(u=new Uint32Array(r.memory.buffer)),u}function O(e,t){return e=e>>>0,L().subarray(e/4,e/4+t)}let w=null;function F(){return(w===null||w.byteLength===0)&&(w=new Float32Array(r.memory.buffer)),w}function v(e,t){return e=e>>>0,F().subarray(e/4,e/4+t)}let R=0;function C(e,t){const n=t(e.length*4,4)>>>0;return F().set(e,n/4),R=e.length,n}typeof FinalizationRegistry>"u"||new FinalizationRegistry(e=>r.__wbg_obstacle_free(e>>>0,1));const x=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_world_free(e>>>0,1));class E{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,x.unregister(this),t}free(){const t=this.__destroy_into_raw();r.__wbg_world_free(t,0)}constructor(){const t=r.world_new();return this.__wbg_ptr=t>>>0,x.register(this,this.__wbg_ptr,this),this}update(t){r.world_update(this.__wbg_ptr,t)}get_best_dino_x(){return r.world_get_best_dino_x(this.__wbg_ptr)}get_best_dino_y(){return r.world_get_best_dino_y(this.__wbg_ptr)}get_best_score(){return r.world_get_best_score(this.__wbg_ptr)>>>0}get_generation(){return r.world_get_generation(this.__wbg_ptr)>>>0}get_obstacle_count(){return r.world_get_obstacle_count(this.__wbg_ptr)>>>0}get_obstacle_x(t){return r.world_get_obstacle_x(this.__wbg_ptr,t)}get_fitness_history(){const t=r.world_get_fitness_history(this.__wbg_ptr);var n=O(t[0],t[1]).slice();return r.__wbindgen_free(t[0],t[1]*4,4),n}get_score(){return r.world_get_score(this.__wbg_ptr)>>>0}get_best_input_weights(){const t=r.world_get_best_input_weights(this.__wbg_ptr);var n=v(t[0],t[1]).slice();return r.__wbindgen_free(t[0],t[1]*4,4),n}get_best_output_weights(){const t=r.world_get_best_output_weights(this.__wbg_ptr);var n=v(t[0],t[1]).slice();return r.__wbindgen_free(t[0],t[1]*4,4),n}get_best_bias(){return r.world_get_best_bias(this.__wbg_ptr)}set_best_weights(t){const n=C(t,r.__wbindgen_malloc),o=R;r.world_set_best_weights(this.__wbg_ptr,n,o)}set_best_bias(t){r.world_set_best_bias(this.__wbg_ptr,t)}count_alive(){return r.world_count_alive(this.__wbg_ptr)>>>0}get_average_score(){return r.world_get_average_score(this.__wbg_ptr)}is_alive(t){return r.world_is_alive(this.__wbg_ptr,t)!==0}}async function U(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(o){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",o);else throw o}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function z(){const e={};return e.wbg={},e.wbg.__wbg_log_c222819a41e063d3=function(t){console.log(t)},e.wbg.__wbindgen_init_externref_table=function(){const t=r.__wbindgen_export_0,n=t.grow(4);t.set(0,void 0),t.set(n+0,void 0),t.set(n+1,null),t.set(n+2,!0),t.set(n+3,!1)},e.wbg.__wbindgen_string_new=function(t,n){return m(t,n)},e.wbg.__wbindgen_throw=function(t,n){throw new Error(m(t,n))},e}function D(e,t){return r=e.exports,W.__wbindgen_wasm_module=t,w=null,u=null,f=null,r.__wbindgen_start(),r}async function W(e){if(r!==void 0)return r;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL("/robo-dino/assets/rust_dino_bg-hD2fcvbJ.wasm",import.meta.url));const t=z();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:o}=await U(await e,t);return D(n,o)}let c;const p=document.getElementById("main"),_=p.getContext("2d"),b=document.getElementById("fitness"),g=b.getContext("2d");let h=[];const d=document.getElementById("weightsCanvas"),y=d.getContext("2d");function I(e){const t=(e+1)/2,n=Math.floor(t*255),o=Math.floor((1-t)*255);return`rgb(${n}, 0, ${o})`}function P(){const e=c.get_best_input_weights(),t=3,n=e.length/t,o=d.width/t,s=d.height/n;y.clearRect(0,0,d.width,d.height);for(let i=0;i<e.length;i++){const a=Math.floor(i/t),l=i%t;y.fillStyle=I(e[i]),y.fillRect(l*o,a*s,o,s)}}function q(){const e=p.width,t=p.height;_.clearRect(0,0,e,t),_.fillStyle="brown",_.fillRect(0,t-20,e,20);const n=c.get_best_dino_x(),o=c.get_best_dino_y();_.fillStyle="green",_.fillRect(n,t-20-o-20,20,20);for(let l=0;l<c.get_obstacle_count();l++){const T=c.get_obstacle_x(l);_.fillStyle="red",_.fillRect(T,t-20-30,20,30)}const s=c.get_best_score(),i=c.get_average_score().toFixed(2),a=c.count_alive();_.fillStyle="black",_.font="14px monospace",_.fillText(`Score: ${s}`,10,20),_.fillText(`Alive: ${a}`,10,40),_.fillText(`Avg score: ${i}`,10,60)}function B(e){g.clearRect(0,0,b.width,b.height);const t=Math.max(...e,10),n=b.width,o=b.height;g.beginPath(),g.moveTo(0,o),e.forEach((s,i)=>{const a=i/e.length*n,l=o-s/t*o;g.lineTo(a,l)}),g.strokeStyle="blue",g.stroke()}function M(){c.update(1/60),q(),P();const e=c.get_best_score();h.push(e),h.length>100&&h.shift(),B(h),requestAnimationFrame(M);const t=c.count_alive();console.log("Alive (frontend):",t)}W().then(()=>{c=new E,requestAnimationFrame(M)});
